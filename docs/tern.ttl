# baseURI: https://w3id.org/tern/ontologies/tern/
# imports: http://datashapes.org/dash
# imports: http://qudt.org/schema/qudt/
# imports: http://rdfs.org/ns/void
# imports: http://www.w3.org/2002/07/owl#
# imports: http://www.w3.org/2004/02/skos/core#
# imports: http://www.w3.org/2006/time#
# imports: http://www.w3.org/ns/dcat#
# imports: http://www.w3.org/ns/prov#
# imports: http://www.w3.org/ns/sosa/
# imports: http://www.w3.org/ns/ssn/
# imports: https://raw.githubusercontent.com/w3c/sdw/gh-pages/ssn-extensions/rdf/ssn-ext.ttl
# imports: https://w3id.org/tern/ontologies/loc/
# imports: https://w3id.org/tern/ontologies/org/
# imports: https://w3id.org/tern/ontologies/sd/
# prefix: tern

@prefix data: <http://linked.data.gov.au/def/datatype/> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix doap: <http://usefulinc.com/ns/doap#> .
@prefix dwc: <http://rs.tdwg.org/dwc/terms/> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix geosparql: <http://www.opengis.net/ont/geosparql#> .
@prefix loc: <https://w3id.org/tern/ontologies/loc/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix plot: <http://linked.data.gov.au/def/plot/> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix qudt: <http://qudt.org/schema/qudt/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <http://schema.org/> .
@prefix schema-https: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix sosa: <http://www.w3.org/ns/sosa/> .
@prefix ssn: <http://www.w3.org/ns/ssn/> .
@prefix tern: <https://w3id.org/tern/ontologies/tern/> .
@prefix tern-org: <https://w3id.org/tern/ontologies/org/> .
@prefix time: <http://www.w3.org/2006/time#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

dwc:materialSampleID
  a rdf:Property ;
  rdfs:comment "An identifier for the MaterialSample (as opposed to a particular digital record of the material sample). In the absence of a persistent global unique identifier, construct one from a combination of identifiers in the record that will most closely make the materialSampleID globally unique." ;
  rdfs:isDefinedBy dwc: ;
  rdfs:label "material sample ID" ;
  skos:example """IGSN:ASR000001 (Resulting URI: http://igsn.org/ASR000001) 
is a globally unique and persistent identifier of a soil sample.""" ;
.
sosa:isSampleOf
  a owl:TransitiveProperty ;
.
tern:
  a owl:Ontology ;
  dcterms:contributor [
      a schema-https:Person ;
      schema-https:affiliation <https://w3id.org/tern/resources/a083902d-d821-41be-b663-1d7cb33eea66> ;
      schema-https:email "a.devaraju@uq.edu.au" ;
      schema-https:name "Anusuriya Devaraju" ;
    ] ;
  dcterms:contributor [
      a schema-https:Person ;
      schema-https:affiliation <https://w3id.org/tern/resources/a083902d-d821-41be-b663-1d7cb33eea66> ;
      schema-https:email "h.floresmoreno@uq.edu.au" ;
      schema-https:name "Habacuc Flores Moreno" ;
    ] ;
  dcterms:contributor [
      a schema-https:Person ;
      schema-https:affiliation <https://w3id.org/tern/resources/a083902d-d821-41be-b663-1d7cb33eea66> ;
      schema-https:email "j.sanchezgonzalez@uq.edu.au" ;
      schema-https:name "Javier Sanchez Gonzalez" ;
    ] ;
  dcterms:contributor [
      a schema-https:Person ;
      schema-https:affiliation <https://w3id.org/tern/resources/a083902d-d821-41be-b663-1d7cb33eea66> ;
      schema-https:email "mosheh.eliyahu@adelaide.edu.au" ;
      schema-https:name "Mosheh Eliyahu" ;
    ] ;
  dcterms:contributor [
      a schema-https:Person ;
      schema-https:affiliation <https://w3id.org/tern/resources/a083902d-d821-41be-b663-1d7cb33eea66> ;
      schema-https:email "t.parkhurst@uq.edu.au" ;
      schema-https:name "Tina Parkhurst" ;
    ] ;
  dcterms:creator [
      a schema-https:Person ;
      schema-https:affiliation <https://w3id.org/tern/resources/a083902d-d821-41be-b663-1d7cb33eea66> ;
      schema-https:email "e.chuc@uq.edu.au" ;
      schema-https:identifier <https://orcid.org/0000-0002-6047-9864> ;
      schema-https:name "Edmond Chuc" ;
    ] ;
  dcterms:creator [
      a schema-https:Person ;
      schema-https:affiliation <https://w3id.org/tern/resources/a083902d-d821-41be-b663-1d7cb33eea66> ;
      schema-https:email "s.guru@uq.edu.au" ;
      schema-https:identifier <https://orcid.org/0000-0002-3903-254X> ;
      schema-https:name "Siddeswara Guru" ;
    ] ;
  dcterms:creator [
      a schema-https:Person ;
      schema-https:email "simon.cox@csiro.au" ;
      schema-https:identifier <https://orcid.org/0000-0002-3884-3420> ;
      schema-https:memberOf [
          a schema-https:Organization ;
          schema-https:identifier <https://w3id.org/tern/resources/276dd611-5d74-4555-b20f-12f0f0b618a1> ;
          schema-https:name "CSIRO" ;
        ] ;
      schema-https:name "Simon J.D.Cox" ;
    ] ;
  dcterms:license <http://creativecommons.org/publicdomain/zero/1.0/> ;
  dcterms:modified "2021-09-22"^^xsd:date ;
  dcterms:publisher <https://w3id.org/tern/resources/a083902d-d821-41be-b663-1d7cb33eea66> ;
  rdfs:comment """The TERN Ontology comprises a set of vocabularies for representing plot-based ecological data. It was developed primarily based on the SOSA (Sensor, Observation, Sample, and Actuator) ontology. The TERN Ontology's classes and properties have been tailored to describe terrestrial ecology survey data including flora, vegetation and soil, following the methodologies outlined in the Australian Soil and Land Survey Field Handbook.
  
  
  """ ;
  rdfs:label "TERN Ontology" ;
  rdfs:seeAlso <https://www.publish.csiro.au/book/5230/> ;
  rdfs:seeAlso <https://www.w3.org/TR/vocab-ssn-ext/> ;
  rdfs:seeAlso <https://www.w3.org/ns/ssn/> ;
  owl:imports <http://datashapes.org/dash> ;
  owl:imports qudt: ;
  owl:imports <http://rdfs.org/ns/void> ;
  owl:imports owl: ;
  owl:imports skos: ;
  owl:imports time: ;
  owl:imports <http://www.w3.org/ns/dcat#> ;
  owl:imports prov: ;
  owl:imports sosa: ;
  owl:imports ssn: ;
  owl:imports <https://raw.githubusercontent.com/w3c/sdw/gh-pages/ssn-extensions/rdf/ssn-ext.ttl> ;
  owl:imports loc: ;
  owl:imports tern-org: ;
  owl:imports <https://w3id.org/tern/ontologies/sd/> ;
  owl:versionIRI <https://w3id.org/tern/ontologies/tern/0.3.2> ;
  owl:versionInfo "0.3.2" ;
  prov:wasGeneratedBy [
      a doap:Project ;
      a prov:Activity ;
      doap:repository <https://github.com/ternaustralia/ontology_tern> ;
    ] ;
.
tern:Attribute
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:label "Attribute" ;
  rdfs:subClassOf ssn:Property ;
  skos:definition "A property-value pair. Same modelling pattern as [schema:PropertyValue](https://schema.org/PropertyValue)." ;
  sh:property [
      a sh:PropertyShape ;
      sh:path dcterms:type ;
      sh:description "Useful when rdfs:subClassOf entailment is enabled and the proximate class type is required to be recorded." ;
      sh:name "type" ;
      sh:nodeKind sh:IRI ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path <http://rdfs.org/ns/void#inDataset> ;
      sh:class tern:RDFDataset ;
      sh:description "A link to the RDF payload's metadata which this resource was a part of." ;
      sh:nodeKind sh:IRI ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path tern:attribute ;
      sh:description "The identifier of the attribute concept. Attribute concepts are usually described with SKOS. TERN manages a list of attributes at http://linked.data.gov.au/def/tern-cv/dd085299-ae86-4371-ae15-61dfa432f924." ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
      sh:nodeKind sh:IRI ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path tern:hasSimpleValue ;
      sh:description "The direct link to the value either as an IRI or an RDF literal. The simple value is always equivalent to the value captured in rdf:value of the tern:Value instance." ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
      sh:name "has simple value" ;
      sh:nodeKind sh:IRIOrLiteral ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path tern:hasValue ;
      sh:class tern:Value ;
      sh:description "A link to a tern:Value instance which encapsulates the value of this Attribute." ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
      sh:name "has value" ;
      sh:nodeKind sh:IRI ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path tern:isAttributeOf ;
      sh:description "A link to the individual which this attribute and its value is applied to. Inverse property of tern:hasAttribute." ;
      sh:nodeKind sh:IRI ;
    ] ;
.
tern:Boolean
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:label "Boolean" ;
  rdfs:subClassOf tern:Value ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:allValuesFrom xsd:boolean ;
      owl:onProperty rdf:value ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:cardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty rdf:value ;
    ] ;
  skos:definition "Class to encapsulate a true-or-false value" ;
  sh:property [
      a sh:PropertyShape ;
      sh:path rdf:value ;
      sh:datatype xsd:boolean ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
    ] ;
.
tern:CategoricalValue
  a owl:Class ;
  rdfs:label "Categorical Value" ;
  rdfs:subClassOf skos:Concept ;
.
tern:Concept
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:label "Concept" ;
  rdfs:subClassOf tern:Value ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:allValuesFrom skos:Concept ;
      owl:onProperty rdf:value ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:allValuesFrom skos:Concept ;
      owl:onProperty tern:localValue ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:allValuesFrom [
          a owl:Class ;
          owl:unionOf (
              skos:Concept
              skos:Collection
              owl:Ontology
            ) ;
        ] ;
      owl:onProperty tern:localVocabulary ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:cardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty rdf:value ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:cardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty tern:vocabulary ;
    ] ;
  skos:definition "Class to encapsulate a classifier, usually a value from a controlled vocabulary." ;
  sh:property [
      a sh:PropertyShape ;
      sh:path rdf:value ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
      sh:nodeKind sh:IRI ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path tern:localValue ;
      sh:maxCount 1 ;
      sh:nodeKind sh:IRI ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path tern:localVocabulary ;
      sh:maxCount 1 ;
      sh:nodeKind sh:IRI ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path tern:vocabulary ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
      sh:nodeKind sh:IRI ;
    ] ;
.
tern:CosmOzStation
  a owl:Class ;
  rdfs:label "CosmOz Station" ;
  rdfs:seeAlso <https://cosmoz.csiro.au> ;
  rdfs:subClassOf tern:FixedPlatform ;
  skos:definition """CosmOz is the Australian Cosmic-Ray Neutron Soil Moisture Monitoring Network
Beginning in October 2010, CSIRO Land and Water installed cosmic-ray probes at a number of locations around Australia to form the inaugural CosmOz network. These sites were established at instrumented research sites operated by CSIRO and University collaborators to test and validate the operation of this new technology.
These novel probes use cosmic rays originating from outer space to measure average soil moisture over an area of about 30 hectares to depths in the soil of between 10 to 50 cm. This constitutes a quantum leap over conventional on-ground soil moisture sensing technology that can only measure soil moisture content within small volumes of soil.
Each system is comprised of a data logger, neutron detector, satellite telemetry, tipping bucket rain gauge, temperature humidity and pressure sensors and three surface moisture (TDR) probes. The system requires minimal maintenance and is powered by a solar charging system. The entire system is installed on a single mast. Data is logged and transmitted every 60 minutes to the CosmOz database.""" ;
  skos:editorialNote "Currently used by the platforms index for SHaRED." ;
.
tern:Count
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:label "Count" ;
  rdfs:subClassOf tern:Value ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:allValuesFrom xsd:integer ;
      owl:onProperty rdf:value ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:cardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty rdf:value ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty tern:uncertainty ;
    ] ;
  skos:definition "Class to encapsulate an integer value." ;
  sh:property [
      a sh:PropertyShape ;
      sh:path rdf:value ;
      sh:datatype xsd:integer ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path tern:uncertainty ;
      sh:datatype xsd:double ;
      sh:maxCount 1 ;
    ] ;
.
tern:Dataset
  a rdfs:Class ;
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:label "Dataset" ;
  rdfs:subClassOf <http://www.w3.org/ns/dcat#Dataset> ;
  skos:definition "A collection of data, published or curated by a single agent, and available for access or download in one or more representations." ;
  skos:scopeNote "This class describes the actual dataset as published by the dataset provider. In cases where a distinction between the actual dataset and its entry in the catalog is necessary (because metadata such as modification date might differ), the catalog record class can be used for the latter." ;
  skos:scopeNote "This class describes the conceptual dataset. One or more representations might be available, with differing schematic layouts and formats or serializations." ;
  sh:property [
      a sh:PropertyShape ;
      sh:path <http://www.w3.org/ns/dcat#distribution> ;
      sh:class tern:Distribution ;
      sh:description "An available distribution of the dataset." ;
      sh:name "dataset distribution" ;
      sh:nodeKind sh:IRI ;
    ] ;
.
tern:Date
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:label "Date" ;
  rdfs:subClassOf tern:Value ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:allValuesFrom xsd:date ;
      owl:onProperty rdf:value ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:cardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty rdf:value ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path rdf:value ;
      sh:datatype xsd:date ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
    ] ;
.
tern:DateTime
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:label "Date time" ;
  rdfs:subClassOf tern:Value ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:allValuesFrom xsd:dateTime ;
      owl:onProperty rdf:value ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:cardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty rdf:value ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path rdf:value ;
      sh:datatype xsd:dateTime ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
    ] ;
.
tern:Deployment
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:label "Deployment" ;
  rdfs:subClassOf ssn:Deployment ;
  skos:definition "Describes the Deployment of one or more Systems for a particular purpose. Deployment may be done on a Platform."@en ;
  skos:example "For example, a temperature Sensor deployed on a wall, or a whole network of Sensors deployed for an Observation campaign." ;
  sh:property [
      a sh:PropertyShape ;
      sh:path ssn:deployedOnPlatform ;
      sh:class tern:Platform ;
      sh:maxCount 1 ;
      sh:name "deployed on platform" ;
      sh:nodeKind sh:IRI ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path ssn:deployedSystem ;
      sh:class tern:System ;
      sh:name "deployed system" ;
      sh:nodeKind sh:IRI ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path tern:hasAttribute ;
      sh:class tern:Attribute ;
      sh:nodeKind sh:IRI ;
    ] ;
.
tern:DigitalCamera
  a owl:Class ;
  rdfs:label "Digital Camera" ;
  rdfs:subClassOf skos:Concept ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:allValuesFrom xsd:string ;
      owl:onProperty skos:altLabel ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:allValuesFrom xsd:string ;
      owl:onProperty skos:definition ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:minCardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty schema:model ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:minCardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty skos:prefLabel ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:minQualifiedCardinality "1"^^xsd:nonNegativeInteger ;
      owl:onClass xsd:string ;
      owl:onProperty dcterms:source ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:minQualifiedCardinality "1"^^xsd:nonNegativeInteger ;
      owl:onClass xsd:string ;
      owl:onProperty schema:manufacturer ;
    ] ;
  skos:definition "The model as defined by the manufacturer." ;
  skos:example "E.g. EOS 350D" ;
.
tern:Dimension
  a owl:Class ;
  rdfs:label "Dimension" ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:allValuesFrom [
          a owl:Class ;
          owl:unionOf (
              xsd:double
              xsd:integer
            ) ;
        ] ;
      owl:onProperty tern:length ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:allValuesFrom [
          a owl:Class ;
          owl:unionOf (
              xsd:double
              xsd:integer
            ) ;
        ] ;
      owl:onProperty tern:width ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:cardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty tern:length ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:cardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty tern:width ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:onClass qudt:Unit ;
      owl:onProperty tern:unit ;
      owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
    ] ;
  owl:deprecated true ;
  skos:definition "The dimension of a 2D square or rectangular feature. Example, the dimension of a rectangular plot [Site](#EcologicalSite). This class should perhaps have specialised classes to express not just square or rectangular features but also others such as circular features." ;
.
tern:Distribution
  a rdfs:Class ;
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:label "Distribution" ;
  rdfs:subClassOf <http://www.w3.org/ns/dcat#Distribution> ;
  skos:definition "A specific representation of a dataset. A dataset might be available in multiple serializations that may differ in various ways, including natural language, media-type or format, schematic organization, temporal and spatial resolution, level of detail or profiles (which might specify any or all of the above)." ;
  skos:example """Examples of distributions include a CSV file, a [netCDF] file, a JSON document, or a data-cube, files made accessible according to different profiles, such as XML or JSON schemas or [ShEx] or [SHACL] expressions.

In some cases all distributions of a dataset will be fully informationally equivalent, in the sense that lossless transformations between the representations are possible. An example would be different serializations of an RDF graph using RDF/XML [RDF-SYNTAX-GRAMMAR], [Turtle], [N3], [JSON-LD]. However, in other cases the distributions might have different levels of fidelity to the underlying data. For example, a graphical representation about the data on a CSV file may not contain the same total information recorded in the CSV file, but they could be considered as two distributions for the same dataset as they are about the same data.

As a counter-example, budget data for different years would usually be modelled as different datasets, each with their own distributions, since all distributions of one dataset should broadly contain the same data.

Nevertheless, the question of whether different representations can be understood to be distributions of the same dataset, or distributions of different datasets, is application specific. Judgement about how to describe them is the responsibility of the provider, taking into account their understanding of the expectations of users, and practices in the relevant community.""" ;
  skos:scopeNote "This represents a general availability of a dataset. It implies no information about the actual access method of the data, i.e. whether by direct download, API, or through a Web page. The use of dcat:downloadURL property indicates directly downloadable distributions." ;
.
tern:EarthObservationSatellite
  a owl:Class ;
  rdfs:label "Earth Observation Satellite" ;
  rdfs:seeAlso <https://gcmd.earthdata.nasa.gov/kms/concept/3466eed1-2fbb-49bf-ab0b-dc08731d502b> ;
  rdfs:subClassOf tern:MobilePlatform ;
  skos:definition "Earth observation satellites are satellites specifically designed to observe Earth from orbit, similar to spy satellites but intended for non-military uses such as environmental monitoring, meteorology, map making etc. Source: Wikipedia, http://en.wikipedia.org/wiki/Earth_observation_satellite Group: Platform_Details Entry_ID: Earth Observation Satellites Group: Platform_Identification Platform_Category: Earth Observation Satellites Short_Name: Earth Observation Satellites End_Group End_Group" ;
.
tern:EcosystemProcessesSite
  a owl:Class ;
  rdfs:label "Ecosystem Processes Site" ;
  rdfs:subClassOf tern:Site ;
  skos:definition "An ecological [Site](#EcologicalSite) that usually hosts a [FluxTower](#FluxTower)." ;
.
tern:FeatureOfInterest
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:label "Feature of Interest" ;
  rdfs:subClassOf sosa:FeatureOfInterest ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:allValuesFrom xsd:string ;
      owl:onProperty dcterms:identifier ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:allValuesFrom loc:Geometry ;
      owl:onProperty geosparql:hasGeometry ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:allValuesFrom tern:RDFDataset ;
      owl:onProperty <http://rdfs.org/ns/void#inDataset> ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:allValuesFrom [
          a owl:Class ;
          owl:unionOf (
              tern:Sampling
              tern:Observation
            ) ;
        ] ;
      owl:onProperty sosa:isFeatureOfInterestOf ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:cardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty <http://rdfs.org/ns/void#inDataset> ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:cardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty tern:featureType ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty rdfs:comment ;
    ] ;
  skos:definition "The thing whose property is being estimated or calculated in the course of an Observation to arrive at a Result or whose property is being manipulated by an Actuator, or which is being sampled or transformed in an act of Sampling."@en ;
  skos:example "When measuring the height of a tree, the height is the observed ObservableProperty, 20m may be the Result of the Observation, and the tree is the FeatureOfInterest. A window is a FeatureOfInterest for an automatic window control Actuator."@en ;
  sh:property [
      a sh:PropertyShape ;
      sh:path dcterms:identifier ;
      sh:datatype xsd:string ;
      sh:name "identifier" ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path dcterms:type ;
      sh:maxCount 1 ;
      sh:name "type" ;
      sh:nodeKind sh:IRI ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path <http://rdfs.org/ns/void#inDataset> ;
      sh:class tern:RDFDataset ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
      sh:nodeKind sh:IRI ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path geosparql:hasGeometry ;
      sh:class loc:Geometry ;
      sh:name "has geometry" ;
      sh:nodeKind sh:IRI ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path rdfs:comment ;
      sh:datatype xsd:string ;
      sh:maxCount 1 ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path sosa:hasSample ;
      sh:class tern:Sample ;
      sh:name "has sample" ;
      sh:nodeKind sh:IRI ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path sosa:isFeatureOfInterestOf ;
      sh:name "is feature of interest of" ;
      sh:nodeKind sh:IRI ;
      sh:or (
          [
            sh:class tern:Observation ;
          ]
          [
            sh:class tern:Sampling ;
          ]
        ) ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path tern:featureType ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
      sh:nodeKind sh:IRI ;
    ] ;
.
tern:FixedPlatform
  a owl:Class ;
  rdfs:label "Fixed Platform" ;
  rdfs:subClassOf tern:Platform ;
  skos:definition "A fixed platform based on land." ;
.
tern:FluxTower
  a owl:Class ;
  rdfs:label "Flux Tower" ;
  rdfs:subClassOf tern:FixedPlatform ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:allValuesFrom xsd:string ;
      owl:onProperty dcterms:description ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:allValuesFrom xsd:string ;
      owl:onProperty rdfs:comment ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:maxQualifiedCardinality "1"^^xsd:nonNegativeInteger ;
      owl:onClass xsd:date ;
      owl:onProperty tern:dateDecommissioned ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:maxQualifiedCardinality "1"^^xsd:nonNegativeInteger ;
      owl:onClass xsd:string ;
      owl:onProperty tern:fluxnetID ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:maxQualifiedCardinality "1"^^xsd:nonNegativeInteger ;
      owl:onClass tern:Site ;
      owl:onProperty sosa:isHostedBy ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:maxQualifiedCardinality "1"^^xsd:nonNegativeInteger ;
      owl:onDataRange xsd:string ;
      owl:onProperty tern:purpose ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:onClass xsd:date ;
      owl:onProperty tern:dateCommissioned ;
      owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:onClass xsd:string ;
      owl:onProperty rdfs:label ;
      owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:onClass loc:Point ;
      owl:onProperty tern:centroidPoint ;
      owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
    ] ;
  skos:definition "Across the globe, towers stand among the landscape, with sensors monitoring these eddies for carbon dioxide, water vapor and other gasses.  These so-called flux towers collect data on carbon dioxide exchange rates between the earth and atmosphere." ;
  skos:example <https://w3id.org/tern/resources/fd2809a2-e705-4961-b09c-7e9ae1ffa87e> ;
  skos:example "Alice Springs Mulga flux tower" ;
.
tern:IRI
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:label "IRI" ;
  rdfs:subClassOf tern:Value ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:cardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty rdf:value ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path rdf:value ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
      sh:nodeKind sh:IRI ;
    ] ;
.
tern:Input
  a owl:Class ;
  rdfs:label "Input" ;
  rdfs:subClassOf ssn:Input ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:allValuesFrom xsd:string ;
      owl:onProperty dcterms:description ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:cardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty rdf:value ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:onClass xsd:string ;
      owl:onProperty rdfs:label ;
      owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
    ] ;
  skos:definition "*Input* - Any information that is provided to a [Procedure](#Procedure) for its use." ;
  skos:example """A **wedge prism** or **relascope** can be used to estimate the Basal Area per hectare. 
The number of counted trees and the Basal Area Factor are inputs to estimate the Basal Area.""" ;
.
tern:Instant
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:label "Instant" ;
  rdfs:subClassOf time:Instant ;
  sh:property [
      a sh:PropertyShape ;
      sh:path time:inXSDDateTimeStamp ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
      sh:name "in XSDDate time stamp" ;
      sh:or (
          [
            sh:datatype xsd:dateTimeStamp ;
          ]
          [
            sh:datatype xsd:dateTime ;
          ]
        ) ;
    ] ;
.
tern:Instrument
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:label "Instrument" ;
  rdfs:subClassOf ssn:System ;
  rdfs:subClassOf tern:System ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:allValuesFrom [
          a owl:Class ;
          owl:unionOf (
              skos:Concept
              owl:Class
              rdfs:Class
              owl:NamedIndividual
            ) ;
        ] ;
      owl:onProperty tern:instrumentType ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:cardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty tern:instrumentType ;
    ] ;
  skos:definition "A device or instrument that is used for making measurements or observations." ;
  sh:property [
      a sh:PropertyShape ;
      sh:path dcterms:type ;
      sh:maxCount 1 ;
      sh:name "type" ;
      sh:nodeKind sh:IRI ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path rdfs:comment ;
      sh:datatype xsd:string ;
      sh:maxCount 1 ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path rdfs:label ;
      sh:datatype xsd:string ;
      sh:maxCount 1 ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path tern:instrumentType ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
      sh:nodeKind sh:IRI ;
    ] ;
.
tern:ManagedFeature
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:label "Feature which is managed for TERN purposes" ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:allValuesFrom xsd:date ;
      owl:onProperty tern:dateCommissioned ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:allValuesFrom xsd:date ;
      owl:onProperty tern:dateDecommissioned ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:cardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty tern:dateCommissioned ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty tern:dateDecommissioned ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path tern:dateCommissioned ;
      sh:datatype xsd:date ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path tern:dateDecommissioned ;
      sh:datatype xsd:date ;
      sh:maxCount 1 ;
    ] ;
.
tern:MaterialSample
  a rdfs:Class ;
  a sh:NodeShape ;
  rdfs:label "Material sample" ;
  rdfs:subClassOf dwc:MaterialSample ;
  rdfs:subClassOf tern:Sample ;
  skos:definition "A physical result of a sampling (or subsampling) event. In biological collections, the material sample is typically collected, and either preserved or destructively processed." ;
  skos:example "A whole organism preserved in a collection. A part of an organism isolated for some purpose. A soil sample. A marine microbial sample." ;
  sh:property [
      a sh:PropertyShape ;
      sh:path dwc:materialSampleID ;
    ] ;
.
tern:Method
  a owl:Class ;
  rdfs:label "Method" ;
  rdfs:scopeNote "We recommend representing the method information following [ISO 9001 Processes, Procedures and Work Instructions](https://3yn1j14c4twk1bmdg82226en-wpengine.netdna-ssl.com/wp-content/uploads/2016/08/iso-9001-procedure.pdf)" ;
  rdfs:seeAlso <https://apps.usgs.gov/thesaurus/term-simple.php?thcode=2&code=376> ;
  rdfs:seeAlso <https://the9000store.com/iso-9001-2015-requirements/iso-9001-2015-context-of-the-organization/processes-procedures-work-instructions/> ;
  rdfs:subClassOf skos:Concept ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:allValuesFrom xsd:string ;
      owl:onProperty schema:timeRequired ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:allValuesFrom xsd:string ;
      owl:onProperty skos:note ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:allValuesFrom skos:Collection ;
      owl:onProperty tern:hasCategoricalCollection ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:allValuesFrom skos:Concept ;
      owl:onProperty tern:hasParameter ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:allValuesFrom [
          a owl:Class ;
          owl:unionOf (
              xsd:string
              xsd:anyURI
            ) ;
        ] ;
      owl:onProperty dcterms:source ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty schema:timeRequired ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:maxQualifiedCardinality "1"^^xsd:nonNegativeInteger ;
      owl:onClass rdf:Seq ;
      owl:onProperty tern:instructions ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:maxQualifiedCardinality "1"^^xsd:nonNegativeInteger ;
      owl:onClass xsd:string ;
      owl:onProperty skos:definition ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:maxQualifiedCardinality "1"^^xsd:nonNegativeInteger ;
      owl:onClass skos:Concept ;
      owl:onProperty tern:equipment ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:maxQualifiedCardinality "1"^^xsd:nonNegativeInteger ;
      owl:onDataRange xsd:string ;
      owl:onProperty tern:purpose ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:maxQualifiedCardinality "1"^^xsd:nonNegativeInteger ;
      owl:onDataRange xsd:string ;
      owl:onProperty tern:scope ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:onClass xsd:string ;
      owl:onProperty skos:prefLabel ;
      owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
    ] ;
  skos:definition "A Method describes in detailed steps how a workflow, protocol, plan or algorithm is carried out to make an [Observation](#Observation) or a [Sample](#Sample). It explains the steps to be carried out to arrive at reproducible [Result](#Result)." ;
  skos:example """Borehole logging is a field method in which 
in situ physical measurements (e.g., temperature) are made down the 
length of a borehole by lowering measurement instruments down the borehole via cable. (Credit: PaST Thesaurus)""" ;
.
tern:MobilePlatform
  a owl:Class ;
  rdfs:label "Mobile Platform" ;
  rdfs:subClassOf tern:Platform ;
  skos:definition "A moving mobile platform on land, in water or in space." ;
.
tern:ObservableProperty
  a owl:Class ;
  rdfs:label "Observable Property" ;
  rdfs:subClassOf sosa:ObservableProperty ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:allValuesFrom skos:Concept ;
      owl:onProperty tern:localValue ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:allValuesFrom tern:Parameter ;
      owl:onProperty rdf:value ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:allValuesFrom [
          a owl:Class ;
          owl:unionOf (
              skos:ConceptScheme
              skos:Collection
              owl:Ontology
            ) ;
        ] ;
      owl:onProperty tern:localVocabulary ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:cardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty rdf:value ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:cardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty tern:vocabulary ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty tern:localValue ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty tern:localVocabulary ;
    ] ;
  skos:definition "An observable quality (property, characteristic) of a [FeatureOfInterest](http://w3.org/ns/sosa/FeatureOfInterest). A feature-of-interest refers to a feature whose properties are measured or observed. " ;
  skos:example """Sampling depth, bulk density, pH are examples of properties of a 
soil sample, and the soil sample is the feature-of-interest, 
representative of the area from which it is collected.""" ;
.
tern:Observation
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:label "Observation" ;
  rdfs:subClassOf prov:Activity ;
  rdfs:subClassOf sosa:Observation ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:allValuesFrom geosparql:Geometry ;
      owl:onProperty geosparql:hasGeometry ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:allValuesFrom xsd:string ;
      owl:onProperty dcterms:identifier ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:allValuesFrom tern:Instrument ;
      owl:onProperty tern:usedInstrument ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:allValuesFrom tern:RDFDataset ;
      owl:onProperty <http://rdfs.org/ns/void#inDataset> ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:cardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty <http://rdfs.org/ns/void#inDataset> ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:cardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty sosa:hasSimpleResult ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:cardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty sosa:observedProperty ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:cardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty sosa:usedProcedure ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty rdfs:comment ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:onClass time:Instant ;
      owl:onProperty sosa:phenomenonTime ;
      owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:onDataRange xsd:dateTime ;
      owl:onProperty sosa:resultTime ;
      owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
    ] ;
  skos:definition "Act of carrying out an (Observation) [Procedure](#Procedure) to estimate or calculate a value of a property of a [FeatureOfInterest](http://w3.org/ns/sosa/FeatureOfInterest). Links to a [Sensor](http://w3.org/ns/sosa/Sensor) to describe what made the [Observation](#Observation) and how; links to an [ObservableProperty](#ObservableProperty) to describe what the result is an estimate of, and to a [FeatureOfInterest](http://w3.org/ns/sosa/FeatureOfInterest) to detail what that property was associated with." ;
  skos:example """The activity of measuring properties such as wind speed and direction by 
an anemometer sensor. The results of the observation are the measurement values 
of the properties estimated by the sensor.""" ;
  sh:property [
      a sh:PropertyShape ;
      sh:path dcterms:identifier ;
      sh:datatype xsd:string ;
      sh:name "identifier" ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path dcterms:type ;
      sh:maxCount 1 ;
      sh:name "type" ;
      sh:nodeKind sh:IRI ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path <http://rdfs.org/ns/void#inDataset> ;
      sh:class tern:RDFDataset ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
      sh:nodeKind sh:IRI ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path geosparql:hasGeometry ;
      sh:class loc:Geometry ;
      sh:name "has geometry" ;
      sh:nodeKind sh:IRI ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path rdfs:comment ;
      sh:datatype xsd:string ;
      sh:maxCount 1 ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path prov:wasAssociatedWith ;
      sh:class tern-org:Person ;
      sh:name "was attributed to" ;
      sh:nodeKind sh:IRIOrLiteral ;
      sh:or (
          [
            sh:class tern-org:Person ;
          ]
          [
            sh:class tern-org:Organization ;
          ]
        ) ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path sosa:hasFeatureOfInterest ;
      sh:class tern:FeatureOfInterest ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
      sh:name "has feature of interest" ;
      sh:nodeKind sh:IRI ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path sosa:hasResult ;
      sh:class tern:Value ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
      sh:name "has result" ;
      sh:nodeKind sh:IRI ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path sosa:hasSimpleResult ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
      sh:name "has simple result" ;
      sh:nodeKing sh:IRI ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path sosa:madeBySensor ;
      sh:class tern:Sensor ;
      sh:maxCount 1 ;
      sh:name "made by sensor" ;
      sh:nodeKind sh:IRI ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path sosa:observedProperty ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
      sh:name "observed property" ;
      sh:nodeKind sh:IRI ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path sosa:phenomenonTime ;
      sh:class tern:Instant ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
      sh:name "phenomenon time" ;
      sh:nodeKind sh:IRI ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path sosa:resultTime ;
      sh:datatype xsd:dateTime ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
      sh:name "result time" ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path sosa:usedProcedure ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
      sh:name "used procedure" ;
      sh:nodeKind sh:IRI ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path tern:hasSiteVisit ;
      sh:class tern:SiteVisit ;
      sh:maxCount 1 ;
      sh:nodeKind sh:IRI ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path tern:observationType ;
      sh:description "The type of observation." ;
      sh:maxCount 1 ;
      sh:nodeKind sh:IRI ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path tern:usedInstrument ;
      sh:class tern:Instrument ;
      sh:nodeKind sh:IRI ;
    ] ;
.
tern:ObservationCollection
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:label "Observation collection" ;
  rdfs:subClassOf sosa:ObservationCollection ;
  skos:definition "Collection of one or more observations, whose members share a common value for one or more property" ;
  sh:property [
      a sh:PropertyShape ;
      sh:path sosa:hasFeatureOfInterest ;
      sh:class tern:FeatureOfInterest ;
      sh:description "A relation between an Observation and the entity whose quality was observed, or between an Actuation and the entity whose property was modified, or between an act of Sampling and the entity that was sampled." ;
      sh:maxCount 1 ;
      sh:name "has feature of interest" ;
      sh:nodeKind sh:IRI ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path sosa:hasMember ;
      sh:description "Link to a member of a collection of observations that share the same value for one or more of the characteristic properties." ;
      sh:minCount 1 ;
      sh:name "has member" ;
      sh:nodeKind sh:IRI ;
      sh:or (
          [
            sh:class tern:Observation ;
          ]
          [
            sh:class tern:ObservationCollection ;
          ]
        ) ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path sosa:hasUltimateFeatureOfInterest ;
      sh:class tern:FeatureOfInterest ;
      sh:description "link to the ultimate feature of interest of an observation or act of sampling. This is useful when the proximate feature of interest is a sample of the ultimate feature of interest, directly or trasntitively." ;
      sh:maxCount 1 ;
      sh:nodeKind sh:IRI ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path sosa:madeBySensor ;
      sh:class tern:Sensor ;
      sh:description "Relation between an Observation and the Sensor which made the Observations." ;
      sh:maxCount 1 ;
      sh:name "made by sensor" ;
      sh:nodeKind sh:IRI ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path sosa:observedProperty ;
      sh:description "Relation linking an Observation to the property that was observed. The ObservableProperty should be a property of the FeatureOfInterest (linked by hasFeatureOfInterest) of this Observation." ;
      sh:maxCount 1 ;
      sh:name "observed property" ;
      sh:nodeKind sh:IRI ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path sosa:phenomenonTime ;
      sh:class tern:Instant ;
      sh:description "The time that the Result of an Observation, Actuation, or Sampling applies to the FeatureOfInterest. Not necessarily the same as the resultTime. May be an interval or an instant, or some other compound temporal entity." ;
      sh:maxCount 1 ;
      sh:name "phenomenon time" ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path sosa:resultTime ;
      sh:datatype xsd:dateTime ;
      sh:description "The result time is the instant of time when the Observation, Actuation or Sampling activity was completed." ;
      sh:maxCount 1 ;
      sh:name "result time" ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path sosa:usedProcedure ;
      sh:description "A relation to link to a re-usable Procedure used in making an Observation, an Actuation, or a Sample, typically through a Sensor, Actuator or Sampler." ;
      sh:minCount 1 ;
      sh:name "used procedure" ;
      sh:nodeKind sh:IRI ;
    ] ;
.
tern:Parameter
  a owl:Class ;
  rdfs:label "Parameter" ;
  rdfs:subClassOf skos:Concept ;
  skos:definition "A [FeatureOfInterest's](http://w3.org/ns/sosa/FeatureOfInterest) property or characteristic which an [Observation](#Observation) is measuring using some [Procedure](#Procedure)." ;
.
tern:Percent
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:label "Percent" ;
  rdfs:subClassOf tern:QuantitativeMeasure ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:hasValue <http://qudt.org/vocab/unit/PERCENT> ;
      owl:onProperty tern:unit ;
    ] ;
  skos:definition "Class to encapsulate a quantitative measure expressed as a percent value." ;
  sh:property [
      a sh:PropertyShape ;
      sh:path tern:unit ;
      sh:hasValue <http://qudt.org/vocab/unit/PERCENT> ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
      sh:nodeKind sh:IRI ;
    ] ;
.
tern:PercentRange
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:label "Percent Range" ;
  rdfs:subClassOf tern:QuantitativeRange ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:hasValue <http://qudt.org/vocab/unit/PERCENT> ;
      owl:onProperty tern:unit ;
    ] ;
  skos:definition "Class to encapsulate a quantitative range expressed as in percent values." ;
  sh:property [
      a sh:PropertyShape ;
      sh:path tern:unit ;
      sh:hasValue <http://qudt.org/vocab/unit/PERCENT> ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
      sh:nodeKind sh:IRI ;
    ] ;
.
tern:Platform
  a owl:Class ;
  rdfs:label "Platform" ;
  rdfs:subClassOf sosa:Platform ;
  skos:definition "An entity that hosts other entities, particularly [Sensors](#Sensor), [Samplers](#Sampler), and other [Platforms](#Platform)." ;
  skos:example """Ocean buoy is an example of platform that is equipped with 
an array of sensors such as GPS, current meters, atmospheric sensors and water 
quality monitors. Sensors measuring weather variables are attached to 
a weather station (a platform)""" ;
.
tern:Plot
  a rdfs:Class ;
  a sh:NodeShape ;
  rdfs:label "Plot" ;
  rdfs:subClassOf tern:Sample ;
  sh:property [
      a sh:PropertyShape ;
      sh:path tern:featureType ;
      sh:hasValue <http://linked.data.gov.au/def/tern-cv/8cadf069-01d7-4420-b454-cae37740c2a2> ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
      sh:name "site type" ;
      sh:nodeKind sh:IRI ;
    ] ;
.
tern:Procedure
  a owl:Class ;
  rdfs:label "Procedure" ;
  rdfs:subClassOf sosa:Procedure ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:allValuesFrom skos:Concept ;
      owl:onProperty tern:methodType ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:cardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty tern:vocabulary ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:maxQualifiedCardinality "1"^^xsd:nonNegativeInteger ;
      owl:onClass tern:Input ;
      owl:onProperty ssn:hasInput ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:onClass tern:Method ;
      owl:onProperty rdf:value ;
      owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
    ] ;
  skos:definition "A workflow, protocol, plan, algorithm, or computational method specifying how to make an [Observation](#Observation), create a [Sample](#Sample), or make a change to the state of the world (via an [Actuator](http://w3.org/ns/sosa/Actuator). A [Procedure](#Procedure) is re-usable, and might be involved in many [Observations](#Observation), [Samplings](#Sampling), or [Actuations](http://w3.org/ns/sosa/Actuation). it explains the steps to be carried out to arrive at reproducible [Results](#Result)." ;
  skos:example """The procedure for collecting photopoints are specified in the 
[AusPlots Rangelands Survey Protocols Manual](http://dx.doi.org/10.13140/2.1.4287.3607).
The DEC Nature Conservation Service Biodiversity have defined 
[standard procedures](https://www.dpaw.wa.gov.au/images/documents/plants-animals/monitoring/sop/sop_establishingvegetationquadrats_20090818_v1.0.pdf)
for establishing quadrats for vegetation sampling.""" ;
  skos:scopeNote "[Input](#Input) can be used to capture any input values for a procedure, such as the input value of the basal wedge to estimate the basal area per hectare." ;
.
tern:Quadrat
  a rdfs:Class ;
  a sh:NodeShape ;
  rdfs:label "Quadrat" ;
  rdfs:subClassOf tern:Sample ;
  sh:property [
      a sh:PropertyShape ;
      sh:path tern:featureType ;
      sh:hasValue <http://linked.data.gov.au/def/tern-cv/4362c8f2-b3cc-4816-b5a2-fb7bb4c0cff5> ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
      sh:name "feature type" ;
      sh:nodeKind sh:IRI ;
    ] ;
.
tern:QuantitativeMeasure
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:label "Quantitative Measure" ;
  rdfs:subClassOf tern:Value ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:allValuesFrom xsd:double ;
      owl:onProperty rdf:value ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:allValuesFrom xsd:double ;
      owl:onProperty tern:uncertainty ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:cardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty rdf:value ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:cardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty tern:unit ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty tern:uncertainty ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path rdf:value ;
      sh:datatype xsd:double ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path tern:uncertainty ;
      sh:datatype xsd:double ;
      sh:maxCount 1 ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path tern:unit ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
      sh:nodeKind sh:IRI ;
    ] ;
.
tern:QuantitativeRange
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:label "Quantitative range" ;
  rdfs:subClassOf tern:Value ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:allValuesFrom xsd:double ;
      owl:onProperty qudt:maxInclusive ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:allValuesFrom xsd:double ;
      owl:onProperty qudt:minInclusive ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:allValuesFrom xsd:double ;
      owl:onProperty tern:uncertainty ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:cardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty qudt:maxInclusive ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:cardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty qudt:minInclusive ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:cardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty tern:uncertainty ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty tern:unit ;
    ] ;
  skos:definition "Class to encapsulate a quantitative range." ;
  sh:property [
      a sh:PropertyShape ;
      sh:path qudt:maxInclusive ;
      sh:datatype xsd:double ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path qudt:minInclusive ;
      sh:datatype xsd:double ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path tern:uncertainty ;
      sh:datatype xsd:double ;
      sh:maxCount 1 ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path tern:unit ;
      sh:maxCount 1 ;
      sh:nodeKind sh:IRI ;
    ] ;
.
tern:RDFDataset
  a rdfs:Class ;
  a sh:NodeShape ;
  rdfs:label "RDFDataset" ;
  rdfs:subClassOf <http://rdfs.org/ns/void#Dataset> ;
  rdfs:subClassOf rdfs:Resource ;
  rdfs:subClassOf tern:Distribution ;
  sh:property [
      a sh:PropertyShape ;
      sh:path dcterms:contributor ;
      sh:description "An entity, such as a person, organisation, or service, that is responsible for making contributions to the dataset. The contributor should be described as an RDF resource, rather than just providing the name as a literal." ;
      sh:nodeKind sh:IRI ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path dcterms:creator ;
      sh:description "An entity, such as a person, organisation, or service, that is primarily responsible for creating the dataset. The creator should be described as an RDF resource, rather than just providing the name as a literal." ;
      sh:nodeKind sh:IRI ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path dcterms:description ;
      sh:datatype xsd:string ;
      sh:description "A textual description of the dataset." ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
      sh:name "description" ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path dcterms:issued ;
      sh:datatype xsd:date ;
      sh:description "Date of formal issuance (e.g., publication) of the dataset. The value should be formatted and datatyped as an xsd:date." ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
      sh:name "issued" ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path dcterms:publisher ;
      sh:description "An entity, such as a person, organisation, or service, that is responsible for making the dataset available. The publisher should be described as an RDF resource, rather than just providing the name as a literal." ;
      sh:name "publisher" ;
      sh:nodeKind sh:IRI ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path dcterms:source ;
      sh:description "A related resource from which the dataset is derived. The source should be described as an RDF resource, rather than as a literal." ;
      sh:nodeKind sh:IRI ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path dcterms:title ;
      sh:datatype xsd:string ;
      sh:description "The name of the dataset." ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
      sh:name "title" ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path <http://rdfs.org/ns/void#vocabulary> ;
      sh:description "The controlled vocabularies used in this RDF dataset." ;
      sh:name "vocabulary" ;
      sh:nodeKind sh:IRI ;
    ] ;
.
tern:Result
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:label "Result" ;
  rdfs:subClassOf tern:Value ;
  skos:definition "The result of an [Observation](#Observation), [Actuation](http://w3.org/ns/sosa/Actuation), or act of [Sampling](#Sampling). To store an observation's simple result value one can use the [hasSimpleResult](http://w3.org/ns/sosa/hasSimpleResult) property." ;
  skos:example """The value 20 as the height of a certain 
tree together with the unit, e.g., Meter.""" ;
  sh:property [
      a sh:PropertyShape ;
      sh:path sosa:isResultOf ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
      sh:name "is result of" ;
      sh:nodeKind sh:IRI ;
      sh:or (
          [
            sh:class tern:Observation ;
          ]
          [
            sh:class tern:Sampling ;
          ]
          [
            sh:class tern:Attribute ;
          ]
        ) ;
    ] ;
.
tern:Sample
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:label "Sample" ;
  rdfs:subClassOf sosa:Sample ;
  rdfs:subClassOf tern:FeatureOfInterest ;
  rdfs:subClassOf tern:Result ;
  skos:definition "*A feature which is intended to be representative of a [FeatureOfInterest](http://w3.org/ns/sosa/FeatureOfInterest) on which [Observations](#Observation) may be made. Physical samples are sometimes known as physical specimens." ;
  skos:example """Plant, animal, soil and water are all 
examples of samples of some feature of interest.""" ;
  sh:property [
      a sh:PropertyShape ;
      sh:path sosa:isResultOf ;
      sh:class tern:Sampling ;
      sh:minCount 1 ;
      sh:name "is result of" ;
      sh:nodeKind sh:IRI ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path sosa:isSampleOf ;
      sh:class tern:FeatureOfInterest ;
      sh:minCount 1 ;
      sh:name "is sample of" ;
      sh:nodeKind sh:IRI ;
    ] ;
.
tern:Sampler
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:label "Sampler" ;
  rdfs:subClassOf sosa:Sampler ;
  rdfs:subClassOf tern:Instrument ;
  rdfs:subClassOf tern:System ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:allValuesFrom sosa:Sampling ;
      owl:onProperty sosa:madeSampling ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:minCardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty ssn:implements ;
    ] ;
  skos:definition "Sampler - A device that is used by, or implements, a (Sampling) [Procedure](#Procedure) to create or transform one or more samples. " ;
  skos:example "A ball mill, diamond drill, hammer, hypodermic syringe and needle, image Sensor or a soil auger can all act as sampling devices (i.e., be Samplers). However, sometimes the distinction between the Sampler and the Sensor is not evident, as they are packaged as a unit. A Sampler need not be a physical device." ;
.
tern:Sampling
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:label "Sampling" ;
  rdfs:subClassOf prov:Activity ;
  rdfs:subClassOf sosa:Sampling ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:allValuesFrom geosparql:Geometry ;
      owl:onProperty geosparql:hasGeometry ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:allValuesFrom xsd:dateTime ;
      owl:onProperty sosa:resultTime ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:allValuesFrom xsd:string ;
      owl:onProperty dcterms:identifier ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:allValuesFrom tern:Instrument ;
      owl:onProperty tern:usedInstrument ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:allValuesFrom tern:Procedure ;
      owl:onProperty sosa:usedProcedure ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:cardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty sosa:resultTime ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:cardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty sosa:usedProcedure ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty rdfs:comment ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:minCardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty sosa:hasResult ;
    ] ;
  skos:definition "An activity of [Sampling](#Sampling) carries out a (Sampling) [Procedure](#Procedure) to create or transform one or more [Samples](#Sample)." ;
  skos:example """Crushing a rock sample in a ball mill to create sub-samples of the rock.
Digging a pit through a soil sequence.
Dividing a field site into quadrants.
Drawing blood from a patient.
Drilling an observation well.
Establishing a station for environmental monitoring.
Registering an image of the landscape.
Sieving a powder to separate the subset finer than 100-mesh.
Selecting a subset of a population.
Splitting a piece of drill-core to create two new samples.
Taking a diamond-drill core from a rock outcrop.""" ;
  sh:property [
      a sh:PropertyShape ;
      sh:path dcterms:identifier ;
      sh:datatype xsd:string ;
      sh:name "identifier" ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path dcterms:type ;
      sh:maxCount 1 ;
      sh:name "type" ;
      sh:nodeKind sh:IRI ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path geosparql:hasGeometry ;
      sh:class loc:Geometry ;
      sh:name "has geometry" ;
      sh:nodeKind sh:IRI ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path rdfs:comment ;
      sh:datatype xsd:string ;
      sh:maxCount 1 ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path prov:wasAssociatedWith ;
      sh:name "was attributed to" ;
      sh:nodeKind sh:IRI ;
      sh:or (
          [
            sh:class tern-org:Person ;
          ]
          [
            sh:class tern-org:Organization ;
          ]
        ) ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path sosa:hasFeatureOfInterest ;
      sh:class tern:FeatureOfInterest ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
      sh:name "has feature of interest" ;
      sh:nodeKind sh:IRI ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path sosa:hasResult ;
      sh:class tern:Sample ;
      sh:minCount 1 ;
      sh:name "has result" ;
      sh:nodeKind sh:IRI ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path sosa:madeBySampler ;
      sh:class tern:Sampler ;
      sh:description "Relation linking an act of Sampling to the Sampler (sampling device or entity) that made it." ;
      sh:name "made by sampler" ;
      sh:nodeKind sh:IRI ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path sosa:resultTime ;
      sh:datatype xsd:dateTime ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
      sh:name "result time" ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path sosa:usedProcedure ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
      sh:name "used procedure" ;
      sh:nodeKind sh:IRI ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path tern:hasSiteVisit ;
      sh:class tern:SiteVisit ;
      sh:maxCount 1 ;
      sh:nodeKind sh:IRI ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path tern:samplingType ;
      sh:description "The type of sampling act." ;
      sh:maxCount 1 ;
      sh:nodeKind sh:IRI ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path tern:usedInstrument ;
      sh:class tern:Instrument ;
      sh:nodeKind sh:IRI ;
    ] ;
.
tern:Sensor
  a owl:Class ;
  rdfs:label "Sensor" ;
  rdfs:subClassOf sosa:Sensor ;
  rdfs:subClassOf tern:Instrument ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:allValuesFrom tern:ObservableProperty ;
      owl:onProperty sosa:observes ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:allValuesFrom tern:Observation ;
      owl:onProperty sosa:madeObservation ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:maxQualifiedCardinality "1"^^xsd:nonNegativeInteger ;
      owl:onDataRange xsd:string ;
      owl:onProperty schema:serialNumber ;
    ] ;
  skos:definition "Device, agent (including humans), or software (simulation) involved in, or implementing, a Procedure. Sensors respond to a stimulus, e.g., a change in the environment, or input data composed from the results of prior Observations, and generate a Result. Sensors can be hosted by Platforms." ;
.
tern:Site
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:label "Ecological Site" ;
  rdfs:subClassOf tern:Platform ;
  rdfs:subClassOf tern:Sample ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:allValuesFrom geosparql:Feature ;
      owl:onProperty geosparql:sfWithin ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:allValuesFrom xsd:string ;
      owl:onProperty tern:dimension ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:allValuesFrom tern:Procedure ;
      owl:onProperty tern:locationProcedure ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty tern:dimension ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:maxQualifiedCardinality "1"^^xsd:nonNegativeInteger ;
      owl:onClass xsd:string ;
      owl:onProperty tern:locationDescription ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:maxQualifiedCardinality "1"^^xsd:nonNegativeInteger ;
      owl:onClass xsd:string ;
      owl:onProperty tern:siteDescription ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:maxQualifiedCardinality "1"^^xsd:nonNegativeInteger ;
      owl:onClass loc:Polygon ;
      owl:onProperty tern:polygon ;
    ] ;
  skos:definition "Location where observations may be made. This is a subclass of [Sample](#Sample) because a site should be designed to be representative of an environmental system (which may be an ecosystem or bioregion) or zone (which may be a zone such as a parcel or tract)." ;
  skos:example "Ausplots Rangelands Site 59858 (Site Name: WAACOO0011)" ;
  skos:scopeNote "Use [dcterms:hasPart](http://purl.org/dc/terms/hasPart) and [dcterms:isPartOf](http://purl.org/dc/terms/isPartOf) to model [Site](#EcologicalSite) and [Subsite](#EcologicalSite) relationships. E.g. In TERN, there are SuperSites that contain multiple core 1 ha plots." ;
  sh:property [
      a sh:PropertyShape ;
      sh:path geosparql:sfWithin ;
      sh:name "sf within" ;
      sh:nodeKind sh:IRI ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path rdfs:label ;
      sh:datatype xsd:string ;
      sh:maxCount 1 ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path tern:dimension ;
      sh:datatype xsd:string ;
      sh:maxCount 1 ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path tern:hasSiteVisit ;
      sh:class tern:SiteVisit ;
      sh:nodeKind sh:IRI ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path tern:locationDescription ;
      sh:datatype xsd:string ;
      sh:maxCount 1 ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path tern:locationProcedure ;
      sh:maxCount 1 ;
      sh:nodeKind sh:IRI ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path tern:polygon ;
      sh:class loc:Polygon ;
      sh:maxCount 1 ;
      sh:nodeKind sh:IRI ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path tern:siteDescription ;
      sh:datatype xsd:string ;
      sh:maxCount 1 ;
    ] ;
.
tern:SiteVisit
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:label "Site Visit" ;
  rdfs:subClassOf prov:Activity ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:allValuesFrom xsd:dateTime ;
      owl:onProperty prov:endedAtTime ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:allValuesFrom xsd:dateTime ;
      owl:onProperty prov:startedAtTime ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:allValuesFrom xsd:string ;
      owl:onProperty dcterms:identifier ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:allValuesFrom tern:RDFDataset ;
      owl:onProperty <http://rdfs.org/ns/void#inDataset> ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:cardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty <http://rdfs.org/ns/void#inDataset> ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:cardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty prov:startedAtTime ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty prov:endedAtTime ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:maxQualifiedCardinality "1"^^xsd:nonNegativeInteger ;
      owl:onClass xsd:string ;
      owl:onProperty tern:locationDescription ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:maxQualifiedCardinality "1"^^xsd:nonNegativeInteger ;
      owl:onClass xsd:string ;
      owl:onProperty tern:siteDescription ;
    ] ;
  skos:definition "A Site Visit is a discrete time-bounded activity at a [Site](#Site), during which [Sampling](#Sampling) or [Observation](#Observation) activities occur. " ;
  sh:property [
      a sh:PropertyShape ;
      sh:path dcterms:identifier ;
      sh:datatype xsd:string ;
      sh:name "identifier" ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path dcterms:type ;
      sh:maxCount 1 ;
      sh:name "type" ;
      sh:nodeKind sh:IRI ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path <http://rdfs.org/ns/void#inDataset> ;
      sh:class tern:RDFDataset ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
      sh:nodeKind sh:IRI ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path prov:endedAtTime ;
      sh:datatype xsd:dateTime ;
      sh:maxCount 1 ;
      sh:name "ended at time" ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path prov:startedAtTime ;
      sh:datatype xsd:dateTime ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
      sh:name "started at time" ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path tern:hasObservation ;
      sh:class tern:Observation ;
      sh:nodeKind sh:IRI ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path tern:hasSampling ;
      sh:class tern:Sampling ;
      sh:nodeKind sh:IRI ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path tern:hasSite ;
      sh:class tern:Site ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
      sh:nodeKind sh:IRI ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path tern:isSiteVisitOf ;
      sh:nodeKind sh:IRI ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path tern:locationDescription ;
      sh:datatype xsd:string ;
      sh:maxCount 1 ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path tern:siteDescription ;
      sh:datatype xsd:string ;
      sh:maxCount 1 ;
    ] ;
.
tern:System
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:label "System" ;
  rdfs:subClassOf ssn:System ;
  sh:property [
      a sh:PropertyShape ;
      sh:path sosa:isHostedBy ;
      sh:class tern:Platform ;
      sh:maxCount 1 ;
      sh:name "is hosted by" ;
      sh:nodeKind sh:IRI ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path ssn:hasDeployment ;
      sh:class tern:Deployment ;
      sh:name "has deployment" ;
      sh:nodeKind sh:IRI ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path ssn:implements ;
      sh:class tern:Method ;
      sh:name "implements" ;
      sh:nodeKind sh:IRI ;
    ] ;
.
tern:Taxon
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:label "Taxon" ;
  rdfs:subClassOf dwc:Taxon ;
  rdfs:subClassOf tern:Value ;
  skos:definition "A group of organisms (sensu http://purl.obolibrary.org/obo/OBI_0100026) considered by taxonomists to form a homogeneous unit." ;
  skos:example "The genus Truncorotaloides as published by Bronnimann et al. in 1953 in the Journal of Paleontology Vol. 27(6) p. 817-820." ;
  sh:property [
      a sh:PropertyShape ;
      sh:path dwc:acceptedNameUsage ;
      sh:name "accepted name usage" ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path dwc:acceptedNameUsageID ;
      sh:name "accepted name usage ID" ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path dwc:class ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path dwc:cultivarEpithet ;
      sh:name "cultivar epithet" ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path dwc:family ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path dwc:genericName ;
      sh:name "generic name" ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path dwc:genus ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path dwc:higherClassification ;
      sh:name "higher classification" ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path dwc:infragenericEpithet ;
      sh:name "infrageneric epithet" ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path dwc:infraspecificEpithet ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path dwc:kingdom ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path dwc:nameAccordingTo ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path dwc:nameAccordingToID ;
      sh:name "name according to ID" ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path dwc:namePublishedIn ;
      sh:name "name published in" ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path dwc:namePublishedInID ;
      sh:name "name published in ID" ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path dwc:namePublishedInYear ;
      sh:name "name published in year" ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path dwc:nomenclaturalCode ;
      sh:name "nomenclatural code" ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path dwc:nomenclaturalStatus ;
      sh:name "nomenclatural status" ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path dwc:order ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path dwc:originalNameUsage ;
      sh:name "original name usage" ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path dwc:originalNameUsageID ;
      sh:name "original name usage ID" ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path dwc:parentNameUsage ;
      sh:name "parent name usage" ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path dwc:parentNameUsageID ;
      sh:name "parent name usage ID" ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path dwc:phylum ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path dwc:scientificName ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path dwc:scientificNameAuthorship ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path dwc:scientificNameID ;
      sh:name "scientific name ID" ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path dwc:specificEpithet ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path dwc:subfamily ;
      sh:name "subfamily" ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path dwc:subgenus ;
      sh:name "subgenus" ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path dwc:taxonConceptID ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path dwc:taxonID ;
      sh:name "taxon ID" ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path dwc:taxonRank ;
      sh:name "taxon rank" ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path dwc:taxonRemarks ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path dwc:taxonomicStatus ;
      sh:name "taxonomic status" ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path dwc:verbatimTaxonRank ;
      sh:name "verbatim taxon rank" ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path dwc:vernacularName ;
      sh:name "vernacular name" ;
    ] ;
.
tern:Text
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:label "Text" ;
  rdfs:subClassOf tern:Value ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:allValuesFrom [
          a owl:Class ;
          owl:unionOf (
              xsd:string
              rdf:langString
            ) ;
        ] ;
      owl:onProperty rdf:value ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:cardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty rdf:value ;
    ] ;
  skos:definition "Class to encapsulate a textual value." ;
  sh:property [
      a sh:PropertyShape ;
      sh:path rdf:value ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
      sh:or (
          [
            sh:datatype xsd:string ;
          ]
          [
            sh:datatype xsd:langString ;
          ]
        ) ;
    ] ;
.
tern:Transect
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:label "Transect" ;
  rdfs:subClassOf tern:Sample ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:allValuesFrom loc:Point ;
      owl:onProperty tern:transectEndPoint ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:allValuesFrom loc:Point ;
      owl:onProperty tern:transectStartPoint ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty tern:transectDirection ;
    ] ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty tern:transectStartPoint ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path geosparql:hasGeometry ;
      sh:class loc:LineString ;
      sh:maxCount 1 ;
      sh:name "has geometry" ;
      sh:nodeKind sh:IRI ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path tern:featureType ;
      sh:hasValue <http://linked.data.gov.au/def/tern-cv/de46fa49-d1c9-4bef-8462-d7ee5174e1e1> ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
      sh:name "feature type" ;
      sh:nodeKind sh:IRI ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path tern:transectDirection ;
      sh:maxCount 1 ;
      sh:name "transect direction" ;
      sh:nodeKind sh:IRIOrLiteral ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path tern:transectEndPoint ;
      sh:class loc:Point ;
      sh:maxCount 1 ;
      sh:name "transect end point" ;
      sh:nodeKind sh:IRI ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path tern:transectStartPoint ;
      sh:class loc:Point ;
      sh:maxCount 1 ;
      sh:name "transect start point" ;
      sh:nodeKind sh:IRI ;
    ] ;
.
tern:Value
  a rdfs:Class ;
  a sh:NodeShape ;
  rdfs:label "Value" ;
  rdfs:subClassOf rdfs:Resource ;
.
tern:area
  a rdf:Property ;
  rdfs:label "area" ;
  skos:definition "The extent of a [Site](#EcologicalSite) area, e.g., in m2" ;
  skos:example " The area of the Mitchell Grass Rangeland SuperSite Supersite is approximately 47 M (million) ha." ;
.
tern:attribute
  a rdf:Property ;
  rdfs:label "attribute" ;
  rdfs:range skos:Concept ;
  skos:definition "Point to a concept representing the attribute." ;
.
tern:cardinalDirection
  a rdf:Property ;
  rdfs:label "cardinal direction" ;
  rdfs:range xsd:string ;
  skos:definition "The cardinal direction of the *thing* represented as a string and expressed by cardinal and intercardinal points. " ;
  skos:example "NNE, W, SE, etc." ;
.
tern:centroidPoint
  a rdf:Property ;
  rdfs:label "centroid point" ;
  rdfs:range loc:Point ;
  rdfs:seeAlso <https://en.wikipedia.org/wiki/List_of_centroids> ;
  rdfs:subPropertyOf geosparql:hasGeometry ;
  owl:deprecated true ;
  skos:definition "The centroid point of an object-of-interest." ;
  skos:example """The geometric center of 1-ha vegetation plot expressed 
as [tern-loc:Point](https://w3id.org/tern/ontologies/loc/Point).""" ;
.
tern:dateCommissioned
  a rdf:Property ;
  rdfs:label "date commissioned" ;
  skos:definition "The date when, e.g., a [Site](#EcologicalSite) is ready to commence its operations, after it is successfully installed and tested." ;
  skos:example """1 August 2017 is the date commisioned of the 
[Collie flux station](http://ozflux.org.au/monitoringsites/collie/index.html)""" ;
  skos:scopeNote "Use ISO 8601 international standard for representing dates and times. Missing start date may be set to the first of the month." ;
.
tern:dateDecommissioned
  a rdf:Property ;
  rdfs:label "date decommissioned" ;
  skos:definition "The date when, e.g., a [Site](#EcologicalSite) is decommissioned or stopped operating." ;
  skos:example """30 Nov 2019 is the date decommisioned of the 
[Collie flux station](http://ozflux.org.au/monitoringsites/collie/index.html)""" ;
  skos:scopeNote "Use ISO 8601 international standard for representing dates and times. Missing end date may be set to the end of the month." ;
.
tern:dimension
  a rdf:Property ;
  rdfs:label "dimension" ;
  skos:definition "Dimenion in metres." ;
  skos:example "100x100" ;
.
tern:domain
  a rdf:Property ;
  rdfs:label "domain" ;
  skos:definition "The domain of the observation." ;
  skos:example "Vegetation, soil, disturbance, landform, etc." ;
.
tern:equipment
  a owl:ObjectProperty ;
  rdfs:label "equipment" ;
  skos:definition "Describe the equipment used as text." ;
.
tern:featureType
  a owl:ObjectProperty ;
  rdfs:domain tern:FeatureOfInterest ;
  rdfs:label "feature type" ;
  rdfs:range skos:Concept ;
  skos:definition "The feature type of a [Feature of Interest](#FeatureofInterest)." ;
.
tern:fluxnetID
  a rdf:Property ;
  rdfs:label "fluxnet ID" ;
  rdfs:seeAlso <https://fluxnet.org/> ;
  skos:definition "The unique identifier for flux towers registered with FLUXNET." ;
  skos:example "AU-ASM" ;
.
tern:globalMatch
  a rdf:Property ;
  rdfs:label "global match" ;
  rdfs:subPropertyOf skos:exactMatch ;
  owl:inverseOf tern:isGlobalMatchOf ;
  skos:definition "Link a concept to an upper concept (in the closed system)." ;
  skos:scopeNote "Use in between controlled vocabularies." ;
.
tern:globalValue
  a rdf:Property ;
  rdfs:label "global value" ;
  skos:definition "A property that links a concept from a vocabulary to another concept in an authoritative/endorsed vocabulary." ;
  skos:example """The concept dry soil colour is defined in two vocabularies, 
[CORVEG](http://linked.data.gov.au/def/corveg-cv/1842b772-72a4-430f-a264-dcfd6c2c23b4) and 
[Ausplots](http://linked.data.gov.au/def/ausplots-cv/aa11e5f7-aec2-4e92-95b8-6332911f0c4e). 
The property global value is used to map the concept from the two vocabularies to the relevant 
[concept](http://linked.data.gov.au/def/tern-cv/beceaa5a-a296-4385-a55a-3b8c8d5b2369) 
specified in the main vocabulary, i.e., TERN Vocabularies.""" ;
.
tern:globalVocabulary
  a rdf:Property ;
  rdfs:label "global vocabulary" ;
  skos:definition "The global vocabulary refers to the main vocabulary, which takes precedence over other similar vocabularies to promote data harmonisation." ;
.
tern:hasAttribute
  a owl:ObjectProperty ;
  rdfs:label "has attribute" ;
  rdfs:range tern:Attribute ;
  rdfs:subPropertyOf ssn:hasProperty ;
  owl:inverseOf tern:isAttributeOf ;
  skos:definition "Link to an [Attribute](#Attribute)." ;
.
tern:hasCategoricalCollection
  a rdf:Property ;
  rdfs:label "has categorical collection" ;
  skos:definition "A property that links a concept to a collection containing its categorical values." ;
.
tern:hasEnvironmentalCharacteristic
  a owl:ObjectProperty ;
  rdfs:label "has environmental characteristic" ;
  skos:definition "The subject has some environmental characteristic. Points to a set of [Observations](#Observation) within an [EnvironmentalCharacteristic](#EnvironmentalCharacteristic)." ;
.
tern:hasFeatureType
  a owl:ObjectProperty ;
  rdfs:label "has feature type" ;
  rdfs:subPropertyOf skos:relatedMatch ;
  skos:definition "Links a concept to a feature type." ;
.
tern:hasMethod
  a rdf:Property ;
  rdfs:label "has method" ;
  rdfs:subPropertyOf skos:relatedMatch ;
  skos:definition "A property that links a concept to a method." ;
.
tern:hasObservation
  a owl:ObjectProperty ;
  rdfs:label "has observation" ;
  rdfs:range tern:Observation ;
  skos:definition "Link to an [Observation](#Observation)." ;
.
tern:hasObservationTheme
  a rdf:Property ;
  rdfs:label "has observation theme" ;
  rdfs:subPropertyOf skos:relatedMatch ;
  skos:definition "Link a concept to an observation theme." ;
.
tern:hasParameter
  a rdf:Property ;
  rdfs:label "has parameter" ;
  rdfs:subPropertyOf skos:relatedMatch ;
  skos:definition "A property that links a concept to a parameter." ;
.
tern:hasSampling
  a owl:ObjectProperty ;
  rdfs:label "has sampling" ;
  rdfs:range tern:Sampling ;
  skos:definition "Link to a [Sampling](#Sampling) instance." ;
.
tern:hasSamplingPoint
  a rdf:Property ;
  rdfs:label "has sampling point" ;
  owl:inverseOf tern:isSamplingPointOf ;
  skos:definition "A property that links, e.g., a [Sampling](#Sampling) to a [SamplingPoint](#SamplingPoint)." ;
.
tern:hasSimpleValue
  a rdf:Property ;
  rdfs:label "has simple value" ;
.
tern:hasSite
  a owl:ObjectProperty ;
  rdfs:label "has site" ;
  rdfs:range tern:Site ;
  skos:definition "A property that links, e.g., a [SiteVisit](#EcologicalSiteVisit) to a [Site](#EcologicalSite)." ;
.
tern:hasSiteVisit
  a owl:ObjectProperty ;
  rdfs:label "has site visit" ;
  rdfs:range tern:SiteVisit ;
  skos:definition "A property that links, e.g., a [Site](#EcologicalSite) to a [Site Visit](#EcologicalSiteVisit)." ;
.
tern:hasSubActivity
  a rdf:Property ;
  rdfs:label "has sub activity" ;
  skos:definition "Link to an [Observation](#Observation) or [Sampling](#Sampling)." ;
.
tern:hasValue
  a owl:ObjectProperty ;
  rdfs:label "has value" ;
  rdfs:range tern:Value ;
.
tern:instructions
  a owl:ObjectProperty ;
  rdfs:label "instructions" ;
  skos:definition "Describe the instructions of the procedure/method." ;
.
tern:instrumentType
  a owl:ObjectProperty ;
  rdfs:label "instrument type" ;
  rdfs:range skos:Concept ;
  skos:definition "The type of instrument used." ;
.
tern:isAttributeOf
  a owl:ObjectProperty ;
  rdfs:domain tern:Attribute ;
  rdfs:label "is attribute of" ;
  owl:inverseOf tern:hasAttribute ;
  skos:definition "Link from an [Attribute](#Attribute)." ;
.
tern:isGlobalMatchOf
  a rdf:Property ;
  rdfs:label "is global match of" ;
  rdfs:subPropertyOf skos:exactMatch ;
  owl:inverseOf tern:globalMatch ;
  skos:definition "An inverse property of [globalMatch](#globalMatch); Links an upper concept to a concept (in the closed system)." ;
  skos:scopeNote "Use in between controlled vocabularies." ;
.
tern:isSamplingPointOf
  a rdf:Property ;
  rdfs:label "is sampling point of" ;
  owl:inverseOf tern:hasSamplingPoint ;
  skos:definition "The inverse property [hasSamplingPoint](#hasSamplingPoint)." ;
.
tern:isSiteOf
  a owl:ObjectProperty ;
  rdfs:label "is site of" ;
  owl:inverseOf tern:hasSite ;
.
tern:isSiteVisitOf
  a owl:ObjectProperty ;
  rdfs:label "is site visit of" ;
  owl:inverseOf tern:isSiteVisitOf ;
.
tern:isSubActivityOf
  a rdf:Property ;
  rdfs:label "is sub activity of" ;
  skos:definition "A property that links an activity to its parent activity." ;
.
tern:length
  a rdf:Property ;
  rdfs:label "length" ;
  rdfs:seeAlso <http://qudt.org/vocab/quantitykind/Length> ;
  skos:definition "A measure of distance." ;
.
tern:localValue
  a rdf:Property ;
  rdfs:label "local value" ;
.
tern:localVocabulary
  a rdf:Property ;
  rdfs:label "local vocabulary" ;
  rdfs:range [
      a owl:Class ;
      owl:unionOf (
          skos:ConceptScheme
          skos:Collection
          owl:Ontology
        ) ;
    ] ;
.
tern:locationDescription
  a rdf:Property ;
  rdfs:label "location description" ;
  skos:definition "The description of the location." ;
  skos:example """Location description of the AusPlots site NTABRT0004 in the Alice Mulga SuperSite: 
Pine Hill Station. 25km South East of Ti-Tree. 20km East of Stuart Highway. 
South west corner of the site is 200m north west of proposed supersite flux tower""" ;
.
tern:locationProcedure
  a rdf:Property ;
  rdfs:label "location procedure" ;
  rdfs:subPropertyOf tern:hasMethod ;
  skos:definition "Link to a procedure used to obtain the location." ;
.
tern:methodType
  a rdf:Property ;
  rdfs:label "method type" ;
  skos:definition "A particular method type used to conduct some survey." ;
.
tern:observationType
  a owl:ObjectProperty ;
  rdfs:label "observation type" ;
  skos:definition "The type of observation." ;
  skos:example "human observation, machine observation." ;
.
tern:polygon
  a rdf:Property ;
  rdfs:label "polygon" ;
  rdfs:range loc:Polygon ;
  rdfs:subPropertyOf geosparql:hasGeometry ;
  skos:definition "The polygon of the subject." ;
.
tern:purpose
  a owl:DatatypeProperty ;
  rdfs:label "purpose" ;
  rdfs:range xsd:string ;
  skos:definition "Describe the purpose of something." ;
.
tern:sampleStorageLocation
  a rdf:Property ;
  rdfs:label "sample storage location" ;
  rdfs:subPropertyOf geosparql:hasGeometry ;
  skos:definition "A property that links a [PhysicalSpecimen](#PhysicalSpecimen) to the location [Point](https://w3id.org/tern/ontologies/loc/Point) of where it is stored." ;
.
tern:samplingType
  a owl:ObjectProperty ;
  rdfs:label "sampling type" ;
  skos:definition "The type of sampling act." ;
.
tern:scope
  a owl:DatatypeProperty ;
  rdfs:label "scope" ;
  rdfs:range xsd:string ;
  skos:definition "Describe the scope of something." ;
.
tern:shortName
  a owl:AnnotationProperty ;
  rdfs:label "short name" ;
.
tern:siteDescription
  a rdf:Property ;
  rdfs:label "site description" ;
  skos:definition "Contextual information is collected at each site. This includes measures of slope an aspect, surface strew and lithology, and information on the grazing and fire history of the site (Credit: TERN AusPlots)." ;
  skos:example <http://ozflux.org.au/monitoringsites/alicesprings/alicesprings_description.html> ;
  skos:scopeNote "Value is usually a summary sentence of the site." ;
.
tern:soilClassification
  a rdf:Property ;
  rdfs:label "soil classification" ;
  skos:definition "The term used to classify the SoilProfile." ;
.
tern:soilHorizonClassifier
  a rdf:Property ;
  rdfs:label "soil horizon classifier" ;
  skos:definition "Soil horizon classifier as defined in the Australian Soil and Land Survey Field Handbook on page 148." ;
.
tern:stratum
  a rdf:Property ;
  rdfs:label "stratum" ;
  rdfs:subPropertyOf dcterms:type ;
  skos:definition "A stratum is a distinct, easily seen, layer of foliage and branches of a measurable height." ;
  skos:scopeNote "Value should be from a controlled vocabulary identified by a URI." ;
.
tern:swPoint
  a rdf:Property ;
  rdfs:label "sw point" ;
  rdfs:range loc:Point ;
  rdfs:subPropertyOf geosparql:hasGeometry ;
  owl:deprecated true ;
  skos:definition "The south-west point of the subject." ;
.
tern:taxon
  a rdf:Property ;
  rdfs:label "taxon" ;
  skos:definition "Taxon classification." ;
  skos:scopeNote "Value should be from a controlled vocabulary identified by a URI." ;
.
tern:transectDirection
  a rdf:Property ;
  rdfs:label "transect direction" ;
  rdfs:range xsd:string ;
  skos:definition "Describes the direction of the transect." ;
  skos:example "S-W" ;
.
tern:transectEndPoint
  a rdf:Property ;
  rdfs:label "transect end point" ;
  skos:definition "Refers to the [tern-loc:Point](https://w3id.org/tern/ontologies/loc/Point) representing the end of a transect." ;
.
tern:transectStartPoint
  a rdf:Property ;
  rdfs:label "transect start point" ;
  skos:definition "Refers to the [tern-loc:Point](https://w3id.org/tern/ontologies/loc/Point) representing the start of a transect." ;
.
tern:uncertainty
  a owl:DatatypeProperty ;
  rdfs:label "uncertainty" ;
  rdfs:range xsd:double ;
  skos:definition "Uncertainty for a quantitative value." ;
.
tern:unit
  a owl:ObjectProperty ;
  rdfs:label "unit" ;
  skos:definition "Unit of measure." ;
.
tern:usedInstrument
  a owl:ObjectProperty ;
  rdfs:label "used instrument" ;
  rdfs:range tern:Instrument ;
.
tern:valueType
  a rdf:Property ;
  rdfs:label "value type" ;
  skos:definition "Relates a Property to a specialisation of tern:Value." ;
  skos:example "Use it to describe an instance of sosa:ObservableProperty and its recommended tern:Value type such as tern:QuantitativeMeasure, tern:Boolean, etc." ;
.
tern:vocabulary
  a owl:ObjectProperty ;
  rdfs:label "vocabulary" ;
  rdfs:range [
      a owl:Class ;
      owl:unionOf (
          skos:ConceptScheme
          skos:Collection
          owl:Ontology
        ) ;
    ] ;
  skos:definition "Controlled vocabulary, taxonomy etc." ;
.
tern:width
  a rdf:Property ;
  rdfs:label "width" ;
  rdfs:seeAlso <http://qudt.org/vocab/quantitykind/Width> ;
  skos:definition "The measurement or extent of something from side to side." ;
.
<https://w3id.org/tern/resources/a083902d-d821-41be-b663-1d7cb33eea66>
  a schema-https:Organization ;
  schema-https:identifier <https://w3id.org/tern/resources/a083902d-d821-41be-b663-1d7cb33eea66> ;
  schema-https:name "TERN" ;
.
[
  a owl:Class ;
  owl:unionOf (
      xsd:string
      xsd:int
    ) ;
].
[
  a owl:Class ;
  owl:unionOf (
      xsd:string
      xsd:int
    ) ;
].
